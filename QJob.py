import random

class QJob(object):
    """
    A quantum job belongs to the simulation environment ``env`` and has 
        an ``_id``. ``env`` and ``_id`` are passed along during the QJob 
        initialization. A quantum job also has certain properties such as 
        ``circuit_depth``, number of qubits ``num_of_qubits``, etc, 
        which are generated by using appropriate models. Depending on the 
        properties, the duration and error rate will vary. 
        
    """
    
    def __init__(self, env, _id): 
        
        self.env = env
        self._id = _id
        self.circuit_depth = int(abs(random.gauss(100, 10))*2)
        self.num_of_qubits = random.randint(0, 26)
        self.num_of_shots  = int(abs(random.gauss(6, 2))*300)
        self.num_of_cnot   = int(abs(random.gauss(6, 1))) # cx
        self.priority      = random.choices([1,2], weights=[0.05, 0.95], k=1)[0]
        self.num_of_circuit= random.randint(0, 4999)
        self.V = random.randint(10, 500) # quantum volume
        
        self.rz = 0 # pull from the csv file based on number of circuit
        self.sx = 0 # pull from the csv file based on number of circuit
        self.x = 0 # pull from the csv file based on number of circuit
        self.cx = 0 # pull from the csv file based on number of circuit
        
        self.requested_device = random.randint(0, 5) # request to specific device
        